name: Build and deliver containers

on: push

jobs:
  ticketservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver ticket-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
      
      - name: Build, test and package project
        working-directory: ./ticket-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/ticket-service:latest ./ticket-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/ticket-service:latest
  eventservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver event-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./event-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/event-service:latest ./event-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/event-service:latest
  registrationservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver registration-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
        
      - name: Build, test and package project
        working-directory: ./registration-service
        run: mvn package -DskipTests
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/registration-service:latest ./registration-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/registration-service:latest
  # apigateway:
  #   runs-on: ubuntu-latest
  #   name: Java 17 build, test, deliver ede-api-gateway container
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v3

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: 17
  #         cache: maven
  #         distribution: adopt

  #     - name: Build, test and package project
  #       working-directory: ./api-gateway
  #       run: mvn package -B -DskipTests

  #     - name: Docker login
  #       run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Docker Build
  #       run: docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKER_USER }}/ede-api-gateway:latest ./api-gateway

  #     - name: Upload container to Docker Hub with Push
  #       run: docker push ${{ secrets.DOCKER_USER }}/ede-api-gateway:latest